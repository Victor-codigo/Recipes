name: Execute tests

on:
  push:
    branches:
      - dev
      - Recipes-home

jobs:
  execute-tests:
    runs-on: ubuntu-latest

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      # Composer cache
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          # path: ${{ steps.composer-cache.outputs.dir }}
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install docker compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: latest
          legacy: true

      - name: "Create ssh fake key"
        run: |
          mkdir ~/.ssh
          echo "" > ~/.ssh/id_ed25519

      - name: "Build containers"
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "./.docker/build/docker-compose.yml"
          services: |
            nginx
            php
            mysql
            composer
          compose-flags: |
            --env-file ./.docker/build/env/.env
        env:
          USER_ID: 1001
          GROUP_ID: 1001

      - name: Setting up project for development
        run: |
          docker-compose \
            --file ./.docker/build/docker-compose.yml \
            --env-file ./.docker/build/env/.env \
            exec -u 1001 php bash -c "cd ./home/runner/work/Recipes/Recipes \
                                      && make setup-test"

      - name: Execute tests
        run: |
          docker-compose \
            --file ./.docker/build/docker-compose.yml \
            --env-file ./.docker/build/env/.env \
            exec -u 1001 php bash -c "cd ./home/runner/work/Recipes/Recipes \
                                      && bin/phpunit"

